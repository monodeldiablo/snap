API
===

  Global Methods:

  * list_tags () => tags
  * create_tag (tag) => bool
  * delete_tag (tag) => bool
  * rename_tag (tag, new_tag) => bool
  * import_directory (path) => bool (necessary?)
  * import_photo (path) => bool
  * search (tags_or_attributes_or_a_date_range) => paths

  Photo Methods:

  * get_tags (path) => tags
  * add_tag (path, tag) => bool
  * remove_tag (path, tag) => bool
  * has_hi_res (path) => bool
  * rotate_photo (path, degrees) => bool
  * delete_photo (path) => bool
  * add_attribute (path, key, value) => true
  * get_attributes (path) => attributes

  Signals:

  * imported_photo (old_path, new_path)
  * rotated_photo (path, degrees)
  * deleted_photo (path)
  * added_tag (tag, path)
  * removed_tag (tag, path)

System Design
=============

Long-running processes get their own daemons, which are launched by DBus call
when needed and then go away (ideally, they'd hang around for a minute or so
just to cut down on churn and reduce startup costs).

These daemons include:

  * import daemon - handles requests to import photos into the photo directory
                    using the proper naming scheme
  * rotate daemon - handles requests to rotate photos
  * delete daemon - handles requests to delete photos
  * tag daemon    - handles requests to add or remove tags to/from photos (this
                    may also explicitly call Tracker.Metadata.Set for some
		    attributes, like Image:Keywords, Image.Copyright, etc)
